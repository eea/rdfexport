#
# The prefix for all rdf:abouts and rdf:resources to make them into URLs. Follows xml:base rules.
# It is recommended to end the string with '/'
#
baseurl = http://rdfdata.eionet.europa.eu/itis/

#
# Vocabulary is added as the empty namespace the rdf:RDF element
#
vocabulary=http://rdfdata.eionet.europa.eu/itis/ontology/

#
# The list of tables for which you have queries. Separated by whitespace.
#
tables = author changes comment expert jurisdiction kingdom publication rank review source taxon vernacular
#
# Some of the columns of the queries will contain references to other
# objects rather than literal values. The following configuration 
# specifies, which columns are references to objects of which type.
# It can also be specified directly in the query.
# The right hand side can be a table name or the empty string.
#
objectproperty.hasParent = taxon
objectproperty.oldTaxon = taxon
objectproperty.newTaxon = taxon
objectproperty.synonymOf = taxon
objectproperty.authorOf = taxon
objectproperty.hasSubSpecies = taxon
objectproperty.hasRank = rank
objectproperty.dirParentRank = rank
objectproperty.reqParentRank = rank
objectproperty.hasJurisdiction = jurisdiction
objectproperty.hasAuthor = author
objectproperty.expertReference = expert
objectproperty.publicationReference = publication
objectproperty.sourceReference = source
objectproperty.hasComment = comments



#
# Attribute tables always have five columns:
# 1. id
# 2. property name
# 3. value
# 4. datatype. Use '->' for references, xsd:integer for integer etc.
# 5. language code
#
#species.attributetable = SELECT ID_SPECIES AS id, NAME, OBJECT, \
#                  CASE TYPE WHEN 'reference' THEN '->' WHEN '' THEN '' ELSE CONCAT('xsd:',TYPE) END, \
#                  OBJECTLANG \
#                  FROM chm62edt_nature_object_attributes \
#                  JOIN chm62edt_species USING(ID_NATURE_OBJECT) \
#                  WHERE LEFT(NAME,1) <> '_' \
#                  LIMIT 100

#
# These namespaces are automatically added to the rdf:RDF element
#
xmlns.rdf = http://www.w3.org/1999/02/22-rdf-syntax-ns#
xmlns.rdfs = http://www.w3.org/2000/01/rdf-schema#
xmlns.geo = http://www.w3.org/2003/01/geo/wgs84_pos#
xmlns.owl = http://www.w3.org/2002/07/owl#
xmlns.foaf = http://xmlns.com/foaf/0.1/
xmlns.sioc = http://rdfs.org/sioc/ns#
xmlns.dwc = http://rs.tdwg.org/dwc/terms/
xmlns.dc = http://purl.org/dc/elements/1.1/
xmlns.dcterms = http://purl.org/dc/terms/
xmlns.skos = http://www.w3.org/2004/02/skos/core#
xmlns.xsd = http://www.w3.org/2001/XMLSchema#
xmlns.cc = http://creativecommons.org/ns#

datatype.varchar =
datatype.char =
datatype.nvarchar =
datatype.int = xsd:integer
datatype.date = xsd:date
datatype.datetime = xsd:dateTime
datatype.decimal = xsd:decimal
datatype.float = xsd:double
datatype.real = xsd:double

#
# The <table>.class sets the rdf:type. If not specified, the capitalized table name is used.
#
taxon.class = Taxon
taxon.key1 = tsn
taxon.query1 = SELECT tsn AS id, \
                        tsn, \
                        unit_ind1 AS unitInd1, \
                        unit_name1 AS unitName1, \
                        unit_ind2 AS unitInd2, \
                        unit_name2 AS unitName2, \
                        unit_ind3 AS unitInd3, \
                        unit_name3 AS unitName3, \
                        unit_ind4 AS unitInd4, \
                        unit_name4 AS unitName4, \
                        unnamed_taxon_ind AS unnamedTaxonInd, \
                        name_usage AS nameUsage, \
                        unaccept_reason AS unacceptReason, \
                        credibility_rtng AS credibilityRating, \
                        completeness_rtng AS completenessRating, \
                        currency_rating AS currencyRating, \
                        initial_time_stamp AS initialTimestamp, \
                        parent_tsn AS hasParent, \
                        taxon_author_id AS hasAuthor, \
                        IF (hybrid_author_id=0, NULL, hybrid_author_id) AS hasAuthor, \
                        kingdom_id AS 'dwc:kingdom->kingdom', \
                        CONCAT(CONVERT(kingdom_id USING utf8),':', CONVERT(rank_id USING utf8)) AS hasRank, \
                        update_date AS 'dcterms:modified^^xsd:date', \
                        CONCAT('http://www.itis.gov/servlet/SingleRpt/SingleRpt?search_topic=TSN&search_value=',CONVERT(tsn USING utf8)) AS 'foaf:page->' \
                        FROM taxonomic_units

taxon.key2 = parent_tsn
taxon.query2 = SELECT parent_tsn AS id, \
                        tsn AS hasSubSpecies \
                        FROM taxonomic_units WHERE parent_tsn IS NOT NULL \
                        ORDER BY parent_tsn

taxon.key3 = tsn
taxon.query3 = SELECT tsn AS id, \
                        completename AS 'rdfs:label', \
                        completename FROM longnames

# NODC IDs are obsolete: http://www.nodc.noaa.gov/General/CDR-detdesc/taxonomic-v8.html
#taxon.query1 = SELECT tsn AS id,
#                       nodc_id AS nodcId FROM nodc_ids

taxon.key4 = tsn
taxon.query4 = SELECT tsn AS id, \
                    CRC32(CONCAT(jurisdiction_value, origin)) AS hasJurisdiction \
                    FROM jurisdiction

taxon.key5 = tsn
taxon.query5 = SELECT tsn AS id, \
                     IF (doc_id_prefix='PUB', documentation_id, NULL) AS publicationReference, \
                     IF (doc_id_prefix='SRC', documentation_id, NULL) AS sourceReference, \
                     IF (doc_id_prefix='EXP', documentation_id, NULL) AS expertReference \
                     FROM reference_links

taxon.key6 = tsn
taxon.query6 = SELECT tsn AS id, \
                    tsn_accepted AS synonymOf \
                    FROM synonym_links

# Should make links instead of literals on the next one
taxon.key7 = tsn
taxon.query7 = SELECT tsn AS id, \
                    geographic_value AS geographicDivision \
                    FROM geographic_div

taxon.key8 = tsn
taxon.query8 = SELECT tsn AS id, \
                    comment_id AS hasComment \
                    FROM tu_comments_links

taxon.key9 = tsn
taxon.query9 = SELECT tsn AS id, \
                    IF (language='English',vernacular_name,NULL) AS 'dwc:vernacularName@en', \
                    IF (language='French',vernacular_name,NULL) AS 'dwc:vernacularName@fr', \
                    IF (language='Italian',vernacular_name,NULL) AS 'dwc:vernacularName@it', \
                    IF (language='Portuguese',vernacular_name,NULL) AS 'dwc:vernacularName@pt', \
                    IF (language='Spanish',vernacular_name,NULL) AS 'dwc:vernacularName@es', \
                    IF (language='unspecified',vernacular_name,NULL) AS 'dwc:vernacularName' \
                    FROM vernaculars

kingdom.key= kingdom_id
kingdom.query= SELECT kingdom_id AS id, \
                    kingdom_name AS kingdomName, \
                    kingdom_name AS 'rdfs:label', \
                    update_date AS 'dcterms:modified' \
                    FROM kingdoms

rank.query= SELECT CONCAT(CONVERT(kingdom_id USING utf8),':', CONVERT(rank_id USING utf8)) AS id, \
                    rank_name AS rankName, \
                    rank_name AS 'rdfs:label', \
                    CONCAT(CONVERT(kingdom_id USING utf8),':',CONVERT(dir_parent_rank_id USING utf8)) AS dirParentRank, \
                    CONCAT(CONVERT(kingdom_id USING utf8),':',CONVERT(req_parent_rank_id USING utf8)) AS reqParentRank, \
                    update_date AS 'dcterms:modified' \
                    FROM taxon_unit_types


jurisdiction.query= SELECT DISTINCT CRC32(CONCAT(jurisdiction_value, origin)) AS id, \
                    jurisdiction_value AS location, \
                    origin \
                    FROM jurisdiction

expert.key = expert_id
expert.query= SELECT expert_id AS id, \
                    expert, \
                    expert AS 'rdfs:label', \
                    update_date AS 'dcterms:modified' \
                    FROM experts

publication.key = publication_id
publication.query= SELECT publication_id AS id, \
                    publication_id, \
                    reference_author AS 'dcterms:creator', \
                    title AS 'dcterms:title', \
                    title AS 'rdfs:label', \
                    publication_name AS publicationName, \
                    IF (listed_pub_date<>actual_pub_date,listed_pub_date,NULL) AS listedPubDate, \
                    actual_pub_date AS 'dcterms:issued', \
                    publisher AS 'dcterms:publisher', \
                    pub_place AS publicationPlace, \
                    isbn, \
                    issn, \
                    pages, \
                    pub_comment AS 'rdfs:comment', \
                    update_date AS 'dcterms:modified' \
                    FROM publications

source.key = source_id
source.query= SELECT source_id AS id, \
                    source_id, \
                    source_type, \
                    source, \
                    source AS 'rdfs:label', \
                    version, \
                    acquisition_date, \
                    source_comment AS 'rdfs:comment', \
                    update_date AS 'dcterms:modified'  \
                    FROM other_sources

author.key1 = taxon_author_id
author.query1 = SELECT taxon_author_id AS id, \
                    shortauthor AS shortAuthor \
                    FROM strippedauthor

author.key2 = taxon_author_id
author.query2 = SELECT taxon_author_id AS id, \
                    taxon_author AS taxonAuthor, \
                    CONCAT('http://www.itis.gov/servlet/SingleRpt/SingleRpt?search_type=author&search_id=author_id&search_id_value=',taxon_author_id) AS 'foaf:page->' \
                    FROM taxon_authors_lkp

author.key3 = taxon_author_id
author.query3 = SELECT taxon_author_id AS id, \
                    tsn AS authorOf \
                    FROM taxonomic_units \
                    WHERE taxon_author_id IS NOT NULL ORDER BY taxon_author_id

review.query = SELECT CONCAT(tsn,':',review_start_date) AS id, \
                    review_start_date AS reviewStartDate, \
                    review_end_date AS reviewEndDate, \
                    review_reason AS reviewReason, \
                    reviewer AS 'dcterms:creator', \
                    review_comment AS 'rdfs:comment', \
                    update_date AS 'dcterms:modified' \
                    FROM reviews

vernacular.class = VernacularName
vernacular.query1 = SELECT CRC32(CONCAT(tsn,':',vern_id)) AS id, \
                    IF (language='English',vernacular_name,NULL) AS 'dwc:vernacularName@en', \
                    IF (language='French',vernacular_name,NULL) AS 'dwc:vernacularName@fr', \
                    IF (language='Portuguese',vernacular_name,NULL) AS 'dwc:vernacularName@pt', \
                    IF (language='Spanish',vernacular_name,NULL) AS 'dwc:vernacularName@es', \
                    IF (language='Italian',vernacular_name,NULL) AS 'dwc:vernacularName@it', \
                    IF (language='unspecified',vernacular_name,NULL) AS 'dwc:vernacularName' \
                    FROM vernaculars

vernacular.query2=  SELECT CRC32(CONCAT(tsn,':',vern_id)) AS id, \
                    IF (doc_id_prefix='PUB', documentation_id, NULL) AS publicationReference, \
                    IF (doc_id_prefix='SRC', documentation_id, NULL) AS sourceReference, \
                    IF (doc_id_prefix='EXP', documentation_id, NULL) AS expertReference \
                    FROM vern_ref_links

comment.query = SELECT comment_id AS id, \
                    commentator AS 'dcterms:creator', \
                    comment_detail AS commentDetail, \
                    comment_time_stamp AS commentTimestamp, \
                    update_date AS 'dcterms:modified' FROM comments

changes.class = Change
changes.query = SELECT change_track_id AS id, \
                    old_tsn AS oldTaxon, \
                    change_reason AS changeReason, \
                    change_initiator AS changeInitiator, \
                    change_reviewer AS changeReviewer, \
                    change_certifier AS changeCertifier, \
                    change_time_stamp AS changetTimestamp, \
                    tsn AS newTaxon, \
                    update_date AS 'dcterms:modified' FROM change_tracks

