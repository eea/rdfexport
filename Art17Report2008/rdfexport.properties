#
# The prefix for all rdf:abouts and rdf:resources to make them into URLs. Follows xml:base rules.
# It is recommended to end the string with '/'
#
baseurl=http://rdfdata.eionet.europa.eu/art17report2008/

#
# Vocabulary is added as the empty namespace the rdf:RDF element
#
vocabulary=http://rdfdata.eionet.europa.eu/art17report2008/ontology/

#
# The list of tables for which you have queries. Separated by whitespace.
#
tables = habitattypes_manual_assessment habitattype_automatic_assessment \
         species_manual_assessment species_automatic_assessment \
         speciessummary

#
# Some of the columns of the queries will contain references to other
# objects rather than literal values. The following configuration 
# specifies, which columns are references to objects of which type.
# It can also be specified directly in the query.
# The right hand side can be a table name or the empty string.
#
objectproperty.conclusion_area = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.conclusion_assessment = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.conclusion_future = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.conclusion_habitat = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.conclusion_population = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.conclusion_range = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.conclusion_structure = http://rdfdata.eionet.europa.eu/article17/assessments
objectproperty.forCountry = http://rdfdata.eionet.europa.eu/eea/countries

#
# The <table>.class sets the rdf:type. If not specified, the capitalized table name is used.
#

habitattypes_manual_assessment.class = HabitatTypeManualAssessment
habitattypes_manual_assessment.query = SELECT CRC32(CONCAT(region, habitatcode, user, MS)) AS id, \
        MS AS forCountry, \
        habitattypes_manual_assessment.* \
        FROM habitattypes_manual_assessment

habitattype_automatic_assessment.class = HabitatTypeAutomaticAssessment
habitattype_automatic_assessment.query = SELECT CRC32(CONCAT(assessment_method,habitatcode,region)) AS id, \
        etc_data_habitattype_automatic_assessment.* \
        FROM etc_data_habitattype_automatic_assessment

species_manual_assessment.class = SpeciesManualAssessment
species_manual_assessment.query = SELECT CRC32(CONCAT(region, assesment_speciesname, user, MS)) AS id, \
                   MS AS forCountry, \
                        species_manual_assessment.* \
                        FROM species_manual_assessment

species_automatic_assessment.class = SpeciesAutomaticAssessment
species_automatic_assessment.query = SELECT CRC32(CONCAT(assessment_method,assesment_speciesname,region)) AS id, \
                        etc_data_species_automatic_assessment.* \
                        FROM etc_data_species_automatic_assessment

speciessummary.query = SELECT CRC32(CONCAT(`country`,`filename`,`region`)) AS id, \
                    CONCAT('http://eunis.eea.europa.eu/species/',eunis_species_code) AS 'forSpecies->', \
                    LEFT(country,2) AS forCountry, \
                    CONCAT('http://rdfdata.eionet.europa.eu/eea/biogeographic-regions/',region) AS 'forRegion->', \
                    etc_data_species_regions.* FROM etc_data_species_regions

#
# These namespaces are automatically added to the rdf:RDF element
#
xmlns.rdf = http://www.w3.org/1999/02/22-rdf-syntax-ns#
xmlns.rdfs = http://www.w3.org/2000/01/rdf-schema#
xmlns.geo = http://www.w3.org/2003/01/geo/wgs84_pos#
xmlns.owl = http://www.w3.org/2002/07/owl#
xmlns.foaf = http://xmlns.com/foaf/0.1/
xmlns.sioc = http://rdfs.org/sioc/ns#
xmlns.dwc = http://rs.tdwg.org/dwc/terms/
xmlns.dc = http://purl.org/dc/elements/1.1/
xmlns.dcterms = http://purl.org/dc/terms/
xmlns.skos = http://www.w3.org/2004/02/skos/core#
xmlns.xsd = http://www.w3.org/2001/XMLSchema#
xmlns.cc = http://creativecommons.org/ns#

datatype.varchar =
datatype.char =
datatype.nvarchar =
datatype.int = xsd:integer
datatype.datetime = xsd:dateTime
datatype.decimal = xsd:double
datatype.float = xsd:double
datatype.real = xsd:double
