#
# Directory where rdfExporter stores generated files
# Path has to be without trailing slash
#
files.dest.dir = ${rdfexporter.files.dest.dir}

#
# The prefix for all rdf:abouts and rdf:resources to make them into URLs. Follows xml:base rules.
# It is recommended to end the string with '/'
#
baseurl=http://rod.eionet.europa.eu/

#
# Vocabulary is added as the empty namespace the rdf:RDF element
#
vocabulary=http://rod.eionet.europa.eu/schema.rdf#

#
# The list of tables for which you have queries. Separated by whitespace.
#
tables = obligations instruments issues clients spatial

#
# Some of the columns of the queries will contain references to other
# objects rather than literal values. The following configuration
# specifies, which columns are references to objects of which type.
# It can also be specified directly in the query.
# The right hand side can be a table name or the empty string.
#
objectproperty.forCountry = http://dd.eionet.europa.eu/vocabulary/common/countries
objectproperty.providerFor = obligations
objectproperty.instrument = instruments
objectproperty.parentInstrument = instruments

obligations.class = Obligation
obligations.query1 = SELECT PK_RA_ID AS id, \
                        CAST(PK_RA_ID AS BINARY) AS 'skos:notation', \
                        FK_SOURCE_ID AS instrument, \
                        VALID_SINCE AS 'dcterms:valid', \
                        TITLE AS 'dcterms:title', \
                        TITLE AS 'rdfs:label', \
                        REPORTING_FORMAT AS 'guidelines', \
                        COMMENT AS 'comment', \
                        NULLIF(RESPONSIBLE_ROLE, '') AS 'responsibleRole', \
                        NEXT_DEADLINE AS 'nextdeadline', \
                        NEXT_DEADLINE2 AS 'nextdeadline2', \
                        LAST_UPDATE AS lastUpdate, \
                        IF(TERMINATE='Y','true','false') AS 'isTerminated^^xsd:boolean', \
                        VALID_SINCE AS validSince, \
                        RM_NEXT_UPDATE AS nextUpdate, \
                        RM_VERIFIED AS verified, \
                        RM_VERIFIED_BY AS verifiedBy, \
                        LAST_HARVESTED AS lastHarvested, \
                        FK_CLIENT_ID AS 'requester->clients', \
                        DESCRIPTION AS 'dcterms:abstract', \
                        NULLIF(COORDINATOR, '') AS 'coordinator', \
                        NULLIF(COORDINATOR_URL, '') AS 'coordinatorUrl->', \
                        NULLIF(LOCATION_PTR, '') AS 'primaryRepository->', \
                        NULLIF(REPORT_FREQ_DETAIL, '') AS reportingFrequencyDetail, \
                        REPORT_FREQ_MONTHS AS reportingFrequencyMonths, \
                        REPORT_FREQ AS reportingFrequency, \
                        VALIDATED_BY AS validatedBy, \
                        IF(EEA_PRIMARY=1,'true','false') AS 'isEEAPrimary^^xsd:boolean', \
                        IF(EEA_CORE=1,'true','false') AS 'isEEACore^^xsd:boolean', \
                        IF(FLAGGED=1,'true','false') AS 'isFlagged^^xsd:boolean', \
                        IF(DPSIR_D='yes','http://dd.eionet.europa.eu/vocabulary/common/dpsir/D',NULL) AS 'dpsirCategory->', \
                        IF(DPSIR_P='yes','http://dd.eionet.europa.eu/vocabulary/common/dpsir/P',NULL) AS 'dpsirCategory->', \
                        IF(DPSIR_S='yes','http://dd.eionet.europa.eu/vocabulary/common/dpsir/S',NULL) AS 'dpsirCategory->', \
                        IF(DPSIR_I='yes','http://dd.eionet.europa.eu/vocabulary/common/dpsir/I',NULL) AS 'dpsirCategory->', \
                        IF(DPSIR_R='yes','http://dd.eionet.europa.eu/vocabulary/common/dpsir/R',NULL) AS 'dpsirCategory->', \
                        NULLIF(DATA_USED_FOR_URL, '') AS 'dataUsedFor->', \
                        IF(CONTINOUS_REPORTING='yes','true','false') AS 'continuousReporting^^xsd:boolean' \
                        FROM T_OBLIGATION

instruments.class = Instrument
instruments.query1 = SELECT PK_SOURCE_ID AS id, \
                        SOURCE_CODE AS 'dcterms:identifier', \
                        CAST(PK_SOURCE_ID AS BINARY) AS 'skos:notation', \
                        TITLE AS 'dcterms:title', \
                        CELEX_REF AS 'celexref', \
                        URL AS 'instrumentURL->', \
                        ABSTRACT AS 'dcterms:abstract', \
                        EC_ACCESSION AS ecAccession, \
                        EC_ENTRY_INTO_FORCE AS ecEntryIntoForce, \
                        IF(DRAFT='Y','true','false') AS 'isDraft^^xsd:boolean', \
                        COMMENT AS 'comment', \
                        LAST_MODIFIED AS lastModified, \
                        ISSUED_BY AS issuedBy, \
                        VALID_FROM AS 'dcterms:valid', \
                        ALIAS AS 'dcterms:alternative', \
                        ALIAS AS 'rdfs:label', \
                        FK_CLIENT_ID AS 'dcterms:creator->clients', \
                        LAST_UPDATE AS lastUpdate, \
                        RM_NEXT_UPDATE AS nextUpdate, \
                        RM_VERIFIED AS verified, \
                        RM_VERIFIED_BY AS verifiedBy, \
                        RM_VALIDATED_BY AS validatedBy, \
                        GEOGRAPHIC_SCOPE AS geographicScope \
                        FROM T_SOURCE

instruments.query2 =    SELECT FK_SOURCE_ID AS id, \
                        PK_RA_ID AS 'hasObligation->obligations' \
                        FROM T_OBLIGATION ORDER BY FK_SOURCE_ID

instruments.query3 =    SELECT FK_SOURCE_CHILD_ID AS id, \
                        FK_SOURCE_PARENT_ID AS parentInstrument \
                        FROM T_SOURCE_LNK \
                        WHERE CHILD_TYPE='S' AND PARENT_TYPE='S' \
                        ORDER BY FK_SOURCE_CHILD_ID

issues.class = Issue
issues.query = SELECT PK_ISSUE_ID AS id, ISSUE_NAME AS 'rdfs:label' \
              FROM T_ISSUE

clients.class = Client
clients.query = SELECT PK_CLIENT_ID AS id, \
		CLIENT_NAME AS 'foaf:name', \
		CLIENT_NAME AS 'rdfs:label', \
		CLIENT_ACRONYM AS clientAcronym, \
		CLIENT_URL AS 'foaf:homepage->', \
		CLIENT_ADDRESS AS clientAddress, \
		CLIENT_EMAIL AS clientEmail, \
                IF (CLIENT_EMAIL IS NOT NULL, CONCAT('mailto:',CLIENT_EMAIL), NULL) AS 'foaf:mbox', \
		DESCRIPTION AS clientDescription, \
		POSTAL_CODE AS clientPostalCode, \
		CITY AS clientCity, \
		COUNTRY AS clientCountry, \
		CLIENT_SHORT_NAME AS clientShortName, \
                'http://xmlns.com/foaf/0.1/Organization' AS 'rdf:type->' \
		FROM T_CLIENT

spatial.class = Locality
spatial.query1 = SELECT PK_SPATIAL_ID AS id, \
        SPATIAL_NAME AS localityName, \
        SPATIAL_NAME AS 'rdfs:label', \
        SPATIAL_TYPE AS localityType, \
        SPATIAL_TWOLETTER AS loccode, \
        SPATIAL_ISMEMBERCOUNTRY AS isEEAMember \
        FROM T_SPATIAL WHERE SPATIAL_TYPE='C'

spatial.query2 = SELECT FK_SPATIAL_ID AS id, \
        FK_RA_ID AS providerFor \
        FROM T_RASPATIAL_LNK

spatial.attributekey = ID
spatial.attributetable = SELECT ID, \
        NAME, OBJECT, \
        CASE TYPE WHEN 'reference' THEN '->' WHEN '' THEN '' ELSE CONCAT('xsd:',TYPE) END, \
        OBJECTLANG \
        FROM T_ATTRIBUTE WHERE SCOPE="spatial"
	
#
# These namespaces are automatically added to the rdf:RDF element
#
xmlns.rdf = http://www.w3.org/1999/02/22-rdf-syntax-ns#
xmlns.rdfs = http://www.w3.org/2000/01/rdf-schema#
xmlns.geo = http://www.w3.org/2003/01/geo/wgs84_pos#
xmlns.owl = http://www.w3.org/2002/07/owl#
xmlns.foaf = http://xmlns.com/foaf/0.1/
xmlns.sioc = http://rdfs.org/sioc/ns#
xmlns.dcterms = http://purl.org/dc/terms/
xmlns.skos = http://www.w3.org/2004/02/skos/core#
xmlns.xsd = http://www.w3.org/2001/XMLSchema#
xmlns.cc = http://creativecommons.org/ns#

datatype.varchar =
datatype.char =
datatype.nvarchar =
datatype.int = xsd:integer
datatype.datetime = xsd:dateTime
datatype.decimal = xsd:double
datatype.float = xsd:double
datatype.real = xsd:double
