#
# The prefix for all rdf:abouts and rdf:resources to make them into URLs. Follows xml:base rules.
# It is recommended to end the string with '/'
#
baseurl=http://rdfdata.eionet.europa.eu/citl/

#
# Vocabulary is added as the empty namespace the rdf:RDF element
#
vocabulary=http://rdfdata.eionet.europa.eu/citl/ontology/

#
# The list of tables for which you have queries. Separated by whitespace.
#
tables = sectors countries installations size allowancetype measurements

#
# Some of the columns of the queries will contain references to other
# objects rather than literal values. The following configuration 
# specifies, which columns are references to objects of which type.
# It can also be specified directly in the query.
# The right hand side can be a table name or the empty string.
#
objectproperty.forCountry = countries
objectproperty.forInstallation = installations
objectproperty.hasSector = sectors
objectproperty.hasSize = size
objectproperty.hasType = allowancetype

#
# The <table>.class sets the rdf:type. If not specified, the capitalized table name is used.
#
installations.class = Installation

#Country + Pollutant_name + Sector_code + Year AS id \
#id = CASE WHEN Country_code IS NULL THEN Country + Pollutant_name + Sector_code + Year \
#     ELSE Country_code + Pollutant_name + Sector_code + Year END \
#     ,[Parent_sector_code] \
#     ,[Sector_name] \
#     ,[Format_name] AS formatName \
installations.query = SELECT country_code + installation_id AS id \
      ,country_code AS forCountry \
      ,installation_id as 'installationId^^xsd:integer' \
      ,CITL_sector_code AS hasSector \
      ,hasSize = CASE \
 WHEN installation_size='Unknown' THEN '1' \
 WHEN installation_size='Zero (emissions = 0 kt CO2-eq)' THEN '2' \
 WHEN installation_size='Mini (0 < emissions < 25 kt CO2-eq)' THEN '3' \
 WHEN installation_size='Small (25 < emissions < 50 kt CO2-eq)' THEN '4' \
 WHEN installation_size='Medium (50 < emissions < 500 kt CO2-eq)' THEN '5' \
 WHEN installation_size='Large (emissions > 500 kt CO2-eq)' THEN '6' \
 END \
  FROM [tab_AE].[dbo].[CITL_v10_installation]

measurements.class = Report
measurements.query = SELECT country_code + installation_id + REPLACE(CITL_information,' ','') + REPLACE(year,' ','') AS id \
      ,country_code + installation_id as forInstallation \
      ,hasType = CASE \
 WHEN CITL_information='Allocated allowances' THEN '1' \
 WHEN CITL_information='Surrendered allowances, CERs and ERUs' THEN '2' \
 WHEN CITL_information='Surrendered CERs' THEN '3' \
 WHEN CITL_information='Surrendered ERUs' THEN '4' \
 WHEN CITL_information='Verified emissions' THEN '5' \
 END \
      ,year AS period \
      ,value \
      ,unit \
  FROM [tab_AE].[dbo].[CITL_v10_cube_final]

sectors.class = Sector
sectors.query = SELECT CITL_sector_code AS id \
      ,CITL_sector_code AS 'sectorCode^^xsd:integer' \
      ,CITL_sector_name AS sectorName \
      ,CITL_sector_name AS 'rdfs:label' \
  FROM [tab_AE].[dbo].[CITL_sector]

countries.class = Country
countries.query = SELECT ID AS id \
      ,ID AS countryCode \
      ,name AS countryName \
      ,name AS 'rdfs:label' \
      ,EU15 AS 'eu15^^xsd:boolean' \
      ,EU25 AS 'eu^^xsd:boolean' \
      ,EU27 AS 'eu27^^xsd:boolean' \
      ,EEA32 AS 'eea32^^xsd:boolean' \
      ,Eurozone AS 'eurozone^^xsd:boolean' \
  FROM [tab_AE].[dbo].[lookup_country]

# Pseudo table without a real table behind.
size.class = rdf:Description
size.attributetable1 = SELECT '1' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/Size','->',NULL \
 ,'rdfs:label','Unknown','',''

size.attributetable2 = SELECT '2' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/Size','->',NULL \
 ,'rdfs:label','Zero (emissions = 0 kt CO2-eq)','',''

size.attributetable3 = SELECT '3' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/Size','->',NULL \
 ,'rdfs:label','Mini (0 < emissions < 25 kt CO2-eq)','',''

size.attributetable4 = SELECT '4' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/Size','->',NULL \
 ,'rdfs:label','Small (25 < emissions < 50 kt CO2-eq)','',''

size.attributetable5 = SELECT '5' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/Size','->',NULL \
 ,'rdfs:label','Medium (50 < emissions < 500 kt CO2-eq)','',''

size.attributetable6 = SELECT '6' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/Size','->',NULL \
 ,'rdfs:label','Large (emissions > 500 kt CO2-eq)','',''

# Pseudo table without a real table behind.
allowancetype.class = rdf:Description
allowancetype.attributetable1 = SELECT '1' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/AllowanceType','->',NULL \
 ,'rdfs:label','Allocated allowances','',''

allowancetype.attributetable2 = SELECT '2' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/AllowanceType','->',NULL \
 ,'rdfs:label','Surrendered allowances, CERs and ERUs','',''

allowancetype.attributetable3 = SELECT '3' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/AllowanceType','->',NULL \
 ,'rdfs:label','Surrendered CERs','',''

allowancetype.attributetable4 = SELECT '4' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/AllowanceType','->',NULL \
 ,'rdfs:label','Surrendered ERUs','',''

allowancetype.attributetable5 = SELECT '5' AS id \
 ,'rdf:type','http://rdfdata.eionet.europa.eu/citl/ontology/AllowanceType','->',NULL \
 ,'rdfs:label','Verified emissions','',''

#
# These namespaces are automatically added to the rdf:RDF element
#
xmlns.rdf = http://www.w3.org/1999/02/22-rdf-syntax-ns#
xmlns.rdfs = http://www.w3.org/2000/01/rdf-schema#
xmlns.geo = http://www.w3.org/2003/01/geo/wgs84_pos#
xmlns.owl = http://www.w3.org/2002/07/owl#
xmlns.foaf = http://xmlns.com/foaf/0.1/
xmlns.sioc = http://rdfs.org/sioc/ns#
xmlns.dwc = http://rs.tdwg.org/dwc/terms/
xmlns.dc = http://purl.org/dc/elements/1.1/
xmlns.dcterms = http://purl.org/dc/terms/
xmlns.skos = http://www.w3.org/2004/02/skos/core#
xmlns.xsd = http://www.w3.org/2001/XMLSchema#
xmlns.cc = http://creativecommons.org/ns#

datatype.varchar =
datatype.char =
datatype.nvarchar =
datatype.int = xsd:integer
datatype.datetime = xsd:dateTime
datatype.decimal = xsd:double
datatype.float = xsd:double
datatype.real = xsd:double

